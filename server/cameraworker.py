import cv2
from flask_socketio import SocketIO
from flask import Flask, render_template, request, Response
import base64
from visca import camera
import json
import serial.tools.list_ports
import sys

from queue import Queue
from cameraconnections import VISCACamera

from threading import Thread
from imutils.video import VideoStream

camera_port = sys.argv[1]

app = Flask(__name__)
print("recieved: ", camera_port)
camera = cv2.VideoCapture(int(camera_port))
camera.open(int(camera_port))
@app.route('/video_feed')
def video_feed():
	""" video_feed will return the frames generated by opencv.
	"""
	return Response(generate_stream(), mimetype='multipart/x-mixed-replace; boundary=frame')

def generate_stream():  
    while True:
        success, frame = camera.read()  # read the camera frame
        if not success:
            break
        else:
            ret, buffer = cv2.imencode('.jpg', frame)
            frame = buffer.tobytes()
            yield (b'--frame\r\n'
                   b'Content-Type: image/jpeg\r\n\r\n' + frame + b'\r\n')  # concat frame one by one and show result


if __name__ == "__main__":
	success, frame = camera.read()  # read the camera frame
	app.run()